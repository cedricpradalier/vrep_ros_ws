cmake_minimum_required(VERSION 2.8.3)
project(vrep_common)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS roscpp sensor_msgs std_msgs message_generation)

## System dependencies are found with CMake's conventions
# find_package(Boost REQUIRED COMPONENTS system)


## Uncomment this if the package has a setup.py. This macro ensures
## modules and global scripts declared therein get installed
## See http://ros.org/doc/api/catkin/html/user_guide/setup_dot_py.html
# catkin_python_setup()

#######################################
## Declare ROS messages and services ##
#######################################

## Generate messages in the 'msg' folder
add_message_files(
  FILES
  ForceSensorData.msg
  JointSetStateData.msg
  ObjectGroupData.msg
  ProximitySensorData.msg
  VisionSensorData.msg
  VisionSensorDepthBuff.msg
  VrepInfo.msg
)

## Generate services in the 'srv' folder
add_service_files(
  FILES
  simRosAddStatusbarMessage.srv
  simRosAppendStringSignal.srv
  simRosAuxiliaryConsoleClose.srv
  simRosAuxiliaryConsoleOpen.srv
  simRosAuxiliaryConsolePrint.srv
  simRosAuxiliaryConsoleShow.srv
  simRosBreakForceSensor.srv
  simRosClearFloatSignal.srv
  simRosClearIntegerSignal.srv
  simRosClearStringSignal.srv
  simRosCloseScene.srv
  simRosCopyPasteObjects.srv
  simRosCreateDummy.srv
  simRosDisablePublisher.srv
  simRosDisableSubscriber.srv
  simRosDisplayDialog.srv
  simRosEnablePublisher.srv
  simRosEnableSubscriber.srv
  simRosEndDialog.srv
  simRosEraseFile.srv
  simRosGetAndClearStringSignal.srv
  simRosGetArrayParameter.srv
  simRosGetBooleanParameter.srv
  simRosGetCollisionHandle.srv
  simRosGetDialogInput.srv
  simRosGetDialogResult.srv
  simRosGetDistanceHandle.srv
  simRosGetFloatingParameter.srv
  simRosGetFloatSignal.srv
  simRosGetInfo.srv
  simRosGetIntegerParameter.srv
  simRosGetIntegerSignal.srv
  simRosGetJointMatrix.srv
  simRosGetJointState.srv
  simRosGetLastErrors.srv
  simRosGetModelProperty.srv
  simRosGetObjectChild.srv
  simRosGetObjectFloatParameter.srv
  simRosGetObjectGroupData.srv
  simRosGetObjectHandle.srv
  simRosGetObjectIntParameter.srv
  simRosGetObjectParent.srv
  simRosGetObjectPose.srv
  simRosGetObjectSelection.srv
  simRosGetObjects.srv
  simRosGetStringParameter.srv
  simRosGetStringSignal.srv
  simRosGetUIButtonProperty.srv
  simRosGetUIEventButton.srv
  simRosGetUIHandle.srv
  simRosGetUISlider.srv
  simRosGetVisionSensorDepthBuffer.srv
  simRosGetVisionSensorImage.srv
  simRosLoadModel.srv
  simRosLoadScene.srv
  simRosLoadUI.srv
  simRosPauseSimulation.srv
  simRosReadCollision.srv
  simRosReadDistance.srv
  simRosReadForceSensor.srv
  simRosReadProximitySensor.srv
  simRosReadVisionSensor.srv
  simRosRemoveObject.srv
  simRosRemoveUI.srv
  simRosRMLPosition.srv
  simRosRMLVelocity.srv
  simRosSetArrayParameter.srv
  simRosSetBooleanParameter.srv
  simRosSetFloatingParameter.srv
  simRosSetFloatSignal.srv
  simRosSetIntegerParameter.srv
  simRosSetIntegerSignal.srv
  simRosSetJointForce.srv
  simRosSetJointPosition.srv
  simRosSetJointState.srv
  simRosSetJointTargetPosition.srv
  simRosSetJointTargetVelocity.srv
  simRosSetModelProperty.srv
  simRosSetObjectFloatParameter.srv
  simRosSetObjectIntParameter.srv
  simRosSetObjectParent.srv
  simRosSetObjectPose.srv
  simRosSetObjectPosition.srv
  simRosSetObjectQuaternion.srv
  simRosSetObjectSelection.srv
  simRosSetSphericalJointMatrix.srv
  simRosSetStringSignal.srv
  simRosSetUIButtonLabel.srv
  simRosSetUIButtonProperty.srv
  simRosSetUISlider.srv
  simRosSetVisionSensorImage.srv
  simRosStartSimulation.srv
  simRosStopSimulation.srv
  simRosSynchronous.srv
  simRosSynchronousTrigger.srv
  simRosTransferFile.srv
)

## Generate added messages and services with any dependencies listed here
generate_messages(
   DEPENDENCIES
   sensor_msgs   std_msgs
)

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if you package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
  INCLUDE_DIRS include
#  LIBRARIES vrep_common
  CATKIN_DEPENDS message_runtime
#  DEPENDS system_lib
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
# include_directories(include)
include_directories(
  ${catkin_INCLUDE_DIRS}
)

## Declare a cpp library
# add_library(vrep_common
#   src/${PROJECT_NAME}/vrep_common.cpp
# )

## Declare a cpp executable
# add_executable(vrep_common_node src/vrep_common_node.cpp)

## Add cmake target dependencies of the executable/library
## as an example, message headers may need to be generated before nodes
# add_dependencies(vrep_common_node vrep_common_generate_messages_cpp)

## Specify libraries to link a library or executable target against
# target_link_libraries(vrep_common_node
#   ${catkin_LIBRARIES}
# )

#############
## Install ##
#############

# all install targets should use catkin DESTINATION variables
# See http://ros.org/doc/api/catkin/html/adv_user_guide/variables.html

## Mark executable scripts (Python etc.) for installation
## in contrast to setup.py, you can choose the destination
# install(PROGRAMS
#   scripts/my_python_script
#   DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark executables and/or libraries for installation
# install(TARGETS vrep_common vrep_common_node
#   ARCHIVE DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   LIBRARY DESTINATION ${CATKIN_PACKAGE_LIB_DESTINATION}
#   RUNTIME DESTINATION ${CATKIN_PACKAGE_BIN_DESTINATION}
# )

## Mark cpp header files for installation
# install(DIRECTORY include/${PROJECT_NAME}/
#   DESTINATION ${CATKIN_PACKAGE_INCLUDE_DESTINATION}
#   FILES_MATCHING PATTERN "*.h"
#   PATTERN ".svn" EXCLUDE
# )

## Mark other files for installation (e.g. launch and bag files, etc.)
# install(FILES
#   # myfile1
#   # myfile2
#   DESTINATION ${CATKIN_PACKAGE_SHARE_DESTINATION}
# )

#############
## Testing ##
#############

## Add gtest based cpp test target and link libraries
# catkin_add_gtest(${PROJECT_NAME}-test test/test_vrep_common.cpp)
# if(TARGET ${PROJECT_NAME}-test)
#   target_link_libraries(${PROJECT_NAME}-test ${PROJECT_NAME})
# endif()

## Add folders to be run by python nosetests
# catkin_add_nosetests(test)
